# https://taskfile.dev
version: '3'

tasks:

  clean:
    cmds:
      - |
        echo GCP Project ID: {{ .GCP_PROJECT }}
        for image in $(gcloud compute images list --project {{ .GCP_PROJECT }} --no-standard-images --format="value(NAME)"); do gcloud compute images delete --project {{ .GCP_PROJECT }} -q $image;done
    ignore_error: true
    vars:
      GCP_PROJECT:
        sh: gcloud config get-value project

  packer:
    desc: Build Packer images
    cmds:
      - task: packer-base
      - task: packer-client

  packer-base:
    desc: Build base image
    dir: packer/gcp
    cmds:
      - packer init .
      - time packer build -only=googlecompute.consul_nomad .
      - echo "All packer builds are complete."

  packer-client:
    desc: Build client images
    dir: packer/gcp
    cmds:
      - packer init .
      - time packer build -force -only=googlecompute.consul_nomad_client_gpu .
      - echo "All packer builds are complete."

  tf-output-dc1:
    aliases: ["tfo1"]
    silent: true
    cmds:
      - rm terraform.tfstate || true
      - rm backend.tf || true
      - ln -s dc1-backend.config backend.tf
      - terraform init
      - terraform output
      - terraform output -raw eval_vars

  tf-output-dc2:
    aliases: ["tfo2"]
    cmds:
      - rm terraform.tfstate || true
      - rm backend.tf || true
      - ln -s dc2-backend.config backend.tf
      - terraform init
      - terraform output
      - terraform output -raw eval_vars

  ui:
    desc: Start the Consul and Nomad UI
    cmds:
      - |
        eval $(terraform output -raw eval_vars)
        open $CONSUL_HTTP_ADDR
        nomad ui -authenticate -tls-skip-verify
        echo $NOMAD_TOKEN | pbcopy
        echo "Nomad token copied to clipboard."
        echo "Consul token: $CONSUL_HTTP_TOKEN"
#    env:
#      CONSUL_HTTP_ADDR:
#        sh: terraform output CONSUL_HTTP_ADDR
#      NOMAD_ADDR:
#        sh: terraform output NOMAD_ADDR
#      NOMAD_TOKEN:
#        sh: terraform output -raw NOMAD_TOKEN

  echoserver:
    desc: Open the echoserver in the browser
    cmds:
      - open https://echoserver.{{ .ingress_fqdn }}
    vars:
      ingress_fqdn:
        sh: terraform output ingress_fqdn

  setup:
    desc: Setup the environment for workload identity
    cmds:
      - |
        eval $(terraform output -raw eval_vars)
        nomad setup consul -y

  run-jobs:
    desc: Run Nomad jobs
    cmds:
      - |
        eval $(terraform output -raw eval_vars)
        nomad volume create jobs/traefik-csi-volume.hcl
        nomad job run -var-file=jobs/traefik.hcl jobs/traefik.nomad
        nomad job run jobs/echoserver.nomad
        nomad job run jobs/helloworld.nomad
      - task: ui-jobs

  ui-jobs:
    desc: UI Nomad jobs
    silent: true
    cmds:
      - echo https://{{ .FQDN }}:8443/dashboard/
      - echo https://echoserver.{{ .FQDN }}
      - echo https://helloworld.{{ .FQDN }}
    vars:
      FQDN:
        sh: terraform output ingress_fqdn

  purge-jobs:
    desc: Purge Nomad jobs
    cmds:
      - |
        eval $(terraform output -raw eval_vars)
        nomad job status -json -short | jq -r '.[].ID' | xargs -n1 echo nomad job stop

  bootstrap-dc1:
    desc: Bootstrap the dc1 HCP Terraform workspace
    dir: bootstrap/dc1
    cmds:
      - terraform init
      - terraform validate
      - terraform apply

  google-cert:
    desc: Google-managed SSL certificate status
    cmds:
      - gcloud compute ssl-certificates describe dc1-hcp-global-cert

  job-wi:
    desc: Run the workload identity job
    cmds:
      - |
        eval $(terraform output -raw eval_vars)
        nomad job stop -purge gcp-wi-demo || true
        nomad job run -var gcp_project=$GCP_PROJECT -var gcp_wi_provider=$GCP_WI_PROVIDER -var gcp_service_account=$GCP_WI_SERVICE_ACCOUNT jobs/gcp-wi-demo.nomad

  job-wi-status:
    desc: Check the status of the workload identity job
    cmds:
      - |
        nomad job status gcp-wi-demo
        nomad alloc status -json -short | jq -r '.[] | select(.JobID == "gcp-wi-demo") | .ID' | xargs -n1 nomad alloc status

  job-wi-exec:
    desc: Check the status of the workload identity job
    cmds:
      - nomad alloc exec -i -t {{ .ID }} bash
    vars:
      ID:
        sh: nomad job allocs -json gcp-wi-demo | jq -r '.[-1].ID'

  docker-build:
    desc: Build the Docker image for the workload identity job
    dir: jobs/monte-carlo
    cmds:
      - |
        docker buildx build --platform linux/amd64,linux/arm64 \
        -t ghcr.io/nhsy-hcp/consul-nomad-gcp/monte-carlo:latest \
        --push .
